@model XgagWebsite.Models.Post

@{
    ViewBag.Title = Model.Title;
}

<div class="jumbotron">
    <div class="container">
        <div class="col-lg-8">
            <div class="row post-row">
                @{ 
                    var userVote = Request.IsAuthenticated ? Model.Votes.FirstOrDefault(v => v.Voter.UserName == User.Identity.Name) : null;
                    var hasUserVoted = userVote != null;
                }
                <h3 class="text-primary">@Model.Title</h3>
                <img src="@(string.Format("/Images/View/{0}", Model.Image.ImageId))" class="post-image" />
                <div>
                    <span class="text-info text">Score: <span id="score-@(Model.PostId)">@Model.CalculateScore()</span></span>
                </div>
                <div>
                    <button onclick="vote(@(Model.PostId), 1)"
                            data-unvote="@(hasUserVoted)"
                            id="upvote-@(Model.PostId)"
                            class="btn
                                    @(hasUserVoted && (int)userVote.Type > 0 ? "btn-success" : hasUserVoted ? "disabled btn-primary" : "btn-primary")
                                    @(!Request.IsAuthenticated ? "disabled" : "")">
                        <span class="glyphicon glyphicon-arrow-up"></span>
                    </button>
                    <button onclick="vote(@(Model.PostId), -1)"
                            data-unvote="@(hasUserVoted)"
                            id="downvote-@(Model.PostId)"
                            class="btn
                                    @(hasUserVoted && (int)userVote.Type < 0 ? "btn-danger" : hasUserVoted ? "disabled btn-primary" : "btn-primary")
                                    @(!Request.IsAuthenticated ? "disabled" : "")">
                        <span class="glyphicon glyphicon-arrow-down"></span>
                    </button>
                    <span class="pull-right text-info">Posted at: <span>@Model.DateCreated</span></span>
                </div>
            </div>
            <hr />
            <div class="row container">
                <textarea id="post-comment" placeholder="Give em' some hate! (ノಠ益ಠ)ノ彡┻━┻" class="text-editor form-control pull-left"></textarea>
                <button id="send-post-comment" 
                        data-id="@(Model.PostId)" 
                        class="btn btn-primary btn-block pull-right @(!Request.IsAuthenticated ? "disabled" : string.Empty)">
                    <span class="glyphicon glyphicon-send"></span>
                </button>
            </div>
            <div class="row">
                @if(Model.Comments != null)
                {
                    foreach (var comment in Model.Comments)
                    {
                        <div class="row comment-row">
                            <div class="row col-lg-12">
                                <h4 class="text-primary">
                                    @(comment.Owner.UserName)
                                    @if (Model.Owner.UserName == comment.Owner.UserName)
                                    {
                                        <span class="text-success">OP</span>
                                    }
                                    - <span class="text-muted">@(comment.DateTimePosted)</span>
                                </h4>
                                <p>@(comment.Text)</p>
                                <button class="btn btn-primary btn-sm pull-right @(!Request.IsAuthenticated ? "disabled" : string.Empty)"
                                        data-toggle="modal"
                                        data-target="#reply-modal"
                                        onclick="selectComment(@(comment.CommentId));">
                                    <span class="glyphicon glyphicon-comment"></span>
                                </button>
                            </div>
                            @if (comment.Comments != null)
                            {
                                <div class="row col-lg-11 pull-right">
                                    @foreach (var reply in comment.Comments)
                                    {
                                    <div class="reply-row">
                                        <h4 class="text-primary">
                                            @(reply.Owner.UserName)
                                            @if (Model.Owner.UserName == reply.Owner.UserName)
                                            {
                                                <span class="text-success">OP</span>
                                            }
                                            - <span class="text-muted">@(reply.DateTimePosted)</span>
                                        </h4>
                                        <p>@(reply.Text)</p>
                                    </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="reply-modal" tabindex="-1" role="dialog" aria-labelledby="Reply">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Reply</h4>
            </div>
            <div class="modal-body">
                <textarea id="reply-text" placeholder="Spit some fire! (ง'̀-'́)ง" class="text-editor form-control"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button id="save-reply" onclick="sendReply();" type="button" class="btn btn-primary">Reply</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/VotingFunctions.js"></script>
    <script>
        var selectedCommentId;
        function selectComment(id) {
            selectedCommentId = id;
        }

        function sendReply() {
            var button = $('#send-reply');
            button.addClass('disabled');
            var commentId = selectedCommentId;
            var comment = $('#reply-text').val();
            var data = {
                replyText: comment,
                commentId: commentId
            };

            $.post('/Posts/Reply', data, function (data) {
                if (data.IsSuccess) {
                    location.reload();
                }
                else {
                    alert("Whoops, something went wrong.¯\_(ツ)_/¯");
                }
                button.removeClass('disabled');
            }).error(function () {
                alert("Whoops, something went wrong.¯\_(ツ)_/¯");
                button.removeClass('disabled');
            });
        }

        $(function () {
            $('#send-post-comment').click(function () {
                var button = $('#send-post-comment');
                button.addClass('disabled');
                var postId = button.attr('data-id');
                var comment = $('#post-comment').val();
                var data = {
                    commentText: comment,
                    postId: postId
                };

                if (true) { //shhhh... no tears, just sweet dreams!( ͡° ͜ʖ ͡°)
                    $.post('/Posts/Comment', data, function (data) {
                        if (data.IsSuccess) {
                            location.reload();
                        }
                        else {
                            alert("Whoops, something went wrong.¯\_(ツ)_/¯");
                        }
                        button.removeClass('disabled');
                    }).error(function () {
                        alert("Whoops, something went wrong.¯\_(ツ)_/¯");
                        button.removeClass('disabled');
                    });
                }
                else {
                    button.removeClass('disabled');
                }
            });
        });
    </script>    
}