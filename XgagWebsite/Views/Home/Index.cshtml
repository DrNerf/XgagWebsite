@using XgagWebsite.Models
@using Microsoft.AspNet.Identity
@using XgagWebsite.Helpers
@model List<Post>
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <div class="container">
        <div class="col-lg-8">
            @foreach (var post in Model)
            {
                var userVote = Request.IsAuthenticated ? post.Votes.FirstOrDefault(v => v.Voter.UserName == User.Identity.GetUserName()) : null;
                var hasUserVoted = userVote != null;

                <div class="row post-row">
                    <h3 class="text-primary"><a href="/Posts/View/@(post.PostId)">@post.Title</a></h3>
                        @if (post.Image != null)
                        {
                            <a href="/Posts/View/@(post.PostId)">
                                <img src="@(string.Format("/Images/View/{0}", post.Image.ImageId))" class="post-image" />
                            </a>
                        }
                        else
                        {
                           <text>@Html.Raw(post.YouTubeLink)</text>
                        }
                    <div>
                        <span class="text-info text">Score: <span id="score-@(post.PostId)">@post.CalculateScore()</span></span>
                    </div>
                    <div>
                        <button onclick="vote(@(post.PostId), 1)"
                                data-unvote="@(hasUserVoted)" 
                                id="upvote-@(post.PostId)" 
                                class="btn 
                                    @(hasUserVoted && (int)userVote.Type > 0 ? "btn-success" : hasUserVoted ? "disabled btn-primary" : "btn-primary") 
                                    @(!Request.IsAuthenticated ? "disabled" : "")">
                            <span class="glyphicon glyphicon-arrow-up"></span>
                        </button>
                        <button onclick="vote(@(post.PostId), -1)" 
                                data-unvote="@(hasUserVoted)"
                                id="downvote-@(post.PostId)" 
                                class="btn 
                                    @(hasUserVoted && (int)userVote.Type < 0 ? "btn-danger" : hasUserVoted ? "disabled btn-primary" : "btn-primary") 
                                    @(!Request.IsAuthenticated ? "disabled" : "")">
                            <span class="glyphicon glyphicon-arrow-down"></span>
                        </button>
                        <a href="/Posts/View/@(post.PostId)">
                            <button class="btn 
                                    @(post.AnyNewComments() ? "btn-success" : "btn-primary")
                                    @(!Request.IsAuthenticated ? "disabled" : "")">
                                <span class="glyphicon glyphicon-comment"></span>
                                <span style="font-weight:bold;">@(post.CountComments())</span>
                            </button>
                        </a>
                        <span class="pull-right text-info">Posted at: <span>@post.DateCreated</span></span>
                    </div>
                    <hr />
                </div>
            }
            @if (Model.Count() == ConfigurationHelper.Instance.PageSize)
            {
                <div class="row">
                    <button class="btn btn-info btn-block" id="next-page" data-current-page="@(Request.Params["page"] ?? "1")">
                        More sh*t <span class="glyphicon glyphicon-arrow-right"></span>
                    </button>
                </div>
            }
        </div>
        @*<div class="col-lg-4">
            <h2 class="text-primary">Top posts:</h2>
        </div>*@
    </div>
</div>


@section scripts{ 
    <script src="~/Scripts/VotingFunctions.js"></script>

    <script>
        $(function () {
            $('#next-page').click(function () {
                var btn = $("#next-page");
                var currentPage = btn.attr("data-current-page");
                window.location = "/Home/Index?page=" + (parseInt(currentPage) + 1);
            });
        });
    </script>
}