@using XgagWebsite.Models
@using Microsoft.AspNet.Identity
@using XgagWebsite.Helpers
@model XgagWebsite.ViewModels.IndexViewModel
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <div class="container">
        <div class="col-lg-8">
            @foreach (var post in Model.Posts)
            {
                var userVote = Request.IsAuthenticated ? post.Votes.FirstOrDefault(v => v.Voter.UserName == User.Identity.GetUserName()) : null;
                var hasUserVoted = userVote != null;

                <div class="row post-row">
                    <h3 class="text-primary"><a href="/Posts/View/@(post.PostId)">@post.Title</a></h3>
                    @if (post.Image != null)
                    {
                        <div>
                            <div class="nsfw-overlay"
                                 data-id="nsfw-@(post.PostId)">
                                <h1 class="glyphicon glyphicon-warning-sign"></h1>
                                <h1>NSFW</h1>
                                <h3>This post is marked as not safe for work</h3>
                                <h2>Click to view the post</h2>
                            </div>
                            <a href="/Posts/View/@(post.PostId)">
                                <img src="@(string.Format("/Images/View/{0}", post.Image.ImageId))" class="post-image" />
                            </a>
                        </div>
                    }
                    else
                    {
                        <text>@Html.Raw(post.YouTubeLink)</text>
                    }
                    <div>
                        <span class="text-info text">Score: <span id="score-@(post.PostId)">@post.CalculateScore()</span></span>
                    </div>
                    <div>
                        <button onclick="vote(@(post.PostId), 1)"
                                data-unvote="@(hasUserVoted)"
                                id="upvote-@(post.PostId)"
                                class="btn
                                    @(hasUserVoted && (int)userVote.Type > 0 ? "btn-success" : hasUserVoted ? "disabled btn-primary" : "btn-primary")
                                    @(!Request.IsAuthenticated ? "disabled" : "")">
                            <span class="glyphicon glyphicon-arrow-up"></span>
                        </button>
                        <button onclick="vote(@(post.PostId), -1)"
                                data-unvote="@(hasUserVoted)"
                                id="downvote-@(post.PostId)"
                                class="btn
                                    @(hasUserVoted && (int)userVote.Type < 0 ? "btn-danger" : hasUserVoted ? "disabled btn-primary" : "btn-primary")
                                    @(!Request.IsAuthenticated ? "disabled" : "")">
                            <span class="glyphicon glyphicon-arrow-down"></span>
                        </button>
                        <a href="/Posts/View/@(post.PostId)">
                            <button class="btn
                                    @(post.AnyNewComments() ? "btn-success" : "btn-primary")
                                    @(!Request.IsAuthenticated ? "disabled" : "")">
                                <span class="glyphicon glyphicon-comment"></span>
                                <span style="font-weight:bold;">@(post.CountComments())</span>
                            </button>
                        </a>
                        <span class="pull-right text-info">Posted at: <span>@post.DateCreated</span></span>
                    </div>
                    <hr />
                </div>
            }
            @if (Model.Posts.Count() == ConfigurationHelper.Instance.PageSize)
            {
                <div class="row">
                    <button class="btn btn-info btn-block" id="next-page" data-current-page="@(Request.Params["page"] ?? "1")">
                        More sh*t <span class="glyphicon glyphicon-arrow-right"></span>
                    </button>
                </div>
            }
        </div>
        <div class="col-lg-4">
            <div class="container">
                <div class="row">
                    <a href="@Url.Action("Upload", "Home")"
                       class="btn btn-primary btn-block">
                        <span class="glyphicon glyphicon-upload"></span>
                        Upload
                    </a>
                </div>
                <br />
                <div class="row">
                    <div class="panel panel-default">
                        <div class="panel-heading">Post of the day:</div>
                        <div class="panel-body">
                            <a href="/Posts/View/@(Model.PostOfTheDay.Post.PostId)">
                                @string.Format(
                                    "{0} with {1} points!",
                                    Model.PostOfTheDay.Post.Title,
                                    Model.PostOfTheDay.Post.Votes.Sum(v => (int)v.Type))
                            </a>
                            <div class="post-preview">
                                <a href="/Posts/View/@(Model.PostOfTheDay.Post.PostId)">
                                    <img src="@(string.Format("/Images/View/{0}", Model.PostOfTheDay.Post.Image.ImageId))" />
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">Top contributors:</div>
                        <div class="panel-body">
                            <ul class="list-group">
                                @foreach (var contributor in Model.TopContributors)
                                {
                                    <li class="list-group-item">
                                        <img width="30" src="@Url.Content(contributor.ProfilePictureUrl)" />
                                        @string.Format(
                                        "{0} with {1} posts!",
                                        contributor.UserName,
                                        contributor.Posts.Count())
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="panel panel-default">
                        <div class="panel-heading">Top posts:</div>
                        <div class="panel-body">
                            <ul class="list-group">
                                @foreach (var post in Model.TopPosts)
                                {
                                    <li class="list-group-item">
                                        <a href="/Posts/View/@(post.PostId)">
                                            @string.Format(
                                                "{0} with {1} points!",
                                                post.Title,
                                                post.Votes.Sum(v => (int)v.Type))
                                        </a>
                                        <div class="post-preview">
                                            <a href="/Posts/View/@(post.PostId)">
                                                <img src="@(string.Format("/Images/View/{0}", post.Image.ImageId))" />
                                            </a>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script src="~/Scripts/VotingFunctions.js"></script>

    <script>
        $(function () {
            $('#next-page').click(function () {
                var btn = $("#next-page");
                var currentPage = btn.attr("data-current-page");
                window.location = "/Home/Index?page=" + (parseInt(currentPage) + 1);
            });

            $(".nsfw-overlay").on("click", function () {
                $(this).slideUp();
            });
        });
    </script>
}